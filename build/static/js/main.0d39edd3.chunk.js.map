{"version":3,"sources":["library/redux/actions.ts","library/styled.ts","library/mainPage/ButtonInfo.tsx","library/mainPage/columns.tsx","library/mainPage/index.tsx","library/bookDetails/descriptionsItem.tsx","library/bookDetails/statusComponent.tsx","library/bookDetails/index.tsx","library/index.tsx","api/index.ts","library/redux/selectors.ts","library/redux/sagas.ts","library/redux/reducer.ts","redux/index.ts","redux/store.ts","App.js","serviceWorker.js","index.js"],"names":["actionCreator","actionCreatorFactory","getBookList","async","userClickedOnTheDetailsButton","changeIsEditMode","cancelChanges","saveChanges","changeStatusBook","deleteBook","getBookInfoInitialize","WrapperComponentStyled","styled","div","BookWrapperComponentStyled","BlockInfoStyled","ControlPanelStyled","TitleStyled","DescriptionsStyled","Descriptions","ButtonBlockStyled","ButtonStyled","Button","InputItemStyled","Input","StatusBlockStyled","ActiveButtonStyled","ModalBodyLabelStyled","ActionsBlockButton","ButtonInfo","item","dispatch","useDispatch","onClickRemoveButton","React","useCallback","id","onClickDetailButton","localStorage","setItem","String","to","pathname","title","InfoCircleFilled","onClick","style","marginLeft","columns","dataIndex","key","render","_record","name","author","yearOfPublishing","language","tableStyles","width","MainInfoComponent","bookList","useSelector","state","library","list","useEffect","started","dataSource","ItemComponent","onChange","isEditMode","value","inputStyles","StatusComponent","inStock","reader","returnDate","useState","visible","setVisible","inputReader","setInputReader","inputReturnDate","setInputReturnDate","inputReturnDateMoment","setInputReturnDateMoment","onOk","onClickReturnBookBut","onCancel","onClickTakeButton","onChangeInputReader","e","target","onChangeDatePicker","date","dateString","ActiveButton","type","buttonStyles","homeIconStyles","fontSize","marginTop","DetailsInfoComponent","initialize","Number","getItem","currentBookInfo","isSaving","inputTitle","setInputTitle","inputAuthor","setInputAuthor","inputYearOfPublishing","setInputYearOfPublishing","bookInfo","onClickHomeButton","onChangeInputTitle","onChangeInputAuthor","onChangeYearOfPublishing","onClickCancelButton","bordered","column","Item","label","numberOfPages","description","loading","HomeFilled","Content","Layout","MainComponent","minHeight","background","exact","path","component","axios","defaults","baseURL","get","getBookInfoById","updateBook","put","deleteBookApi","delete","getCurrentBookInfo","getCurrentBookId","currentBookId","getList","updateBookInfo","getInfoByBookId","saga","call","data","actions","done","params","undefined","result","console","error","failed","select","all","takeLatest","initialState","reducerWithInitialState","case","payload","find","cases","reduce","acc","reducer","combineReducers","librarySaga","configureStore","sagaMiddleWare","createSagaMiddleWare","store","createStore","composeWithDevTools","applyMiddleware","run","App","Boolean","window","location","hostname","match","ReactDOM","createElement","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.0d39edd3.chunk.js","sourcesContent":["import actionCreatorFactory from 'typescript-fsa';\nimport {ListType} from \"../types\";\n\nconst actionCreator = actionCreatorFactory('library');\n\nexport const getBookList = actionCreator.async<void, any[]>('GET_BOOK_lIST');\n\nexport const userClickedOnTheDetailsButton = actionCreator<number>('CHANGE_CURRENT_BOOK_ID');\n\nexport const changeIsEditMode = actionCreator<boolean>('CHANGE_IS_EDIT_MODE');\n\nexport const cancelChanges = actionCreator('CANCEL_CHANGES');\n\nexport const saveChanges = actionCreator.async<ListType | null, boolean>('SAVE_CHANGES');\n\nexport const changeStatusBook = actionCreator<\n{\n  reader: string | null;\n  returnDate: string | null;\n}>('USER_TAKE_BOOK');\n\nexport const deleteBook = actionCreator<number>('DELETE_BOOK');\n\nexport const getBookInfoInitialize = actionCreator.async<number, ListType | null>(\n    'GET_BOOK_INFO_INITIALIZE'\n);","import styled from \"styled-components\";\nimport {Button, Descriptions, Input} from \"antd\";\n\nexport const WrapperComponentStyled = styled.div`\n  padding: 24px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 930px;\n`;\nexport const BookWrapperComponentStyled = styled.div`\n  padding: 24px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const BlockInfoStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 800px;\n`;\nexport const ControlPanelStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-right: 16px;\n  width: 200px;\n`;\n\nexport const TitleStyled = styled.div`\n  font-size: 36px;\n  margin-bottom: 24px;\n`;\nexport const DescriptionsStyled = styled(Descriptions)`\n  tbody {\n    tr > td {\n      width: 1250px;\n    }\n  }\n`;\n\nexport const ButtonBlockStyled = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 8px;\n  padding: 16px;\n`;\n\nexport const ButtonStyled = styled(Button)`\n  width: 100px;\n`;\n\nexport const InputItemStyled = styled(Input)`\n  width: 400px;\n`;\n\nexport const StatusBlockStyled = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const ActiveButtonStyled = styled(Button)`\n  width: 150px;\n`;\n\nexport const ModalBodyLabelStyled = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 8px;\n`;\n\nexport const ActionsBlockButton = styled.div`\n  display: flex;\n  align-items: center;\n`;","import React from \"react\";\nimport { Tooltip } from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport {ListType} from \"../types\";\nimport { InfoCircleFilled } from '@ant-design/icons'\nimport {ActionsBlockButton} from \"../styled\";\nimport {MinusCircleFilled} from \"@ant-design/icons/lib\";\nimport {deleteBook, userClickedOnTheDetailsButton} from \"../redux/actions\";\nimport {useDispatch} from \"react-redux\";\n\nexport const ButtonInfo: React.FC<{ item: ListType }> = ({ item }) => {\n    const dispatch= useDispatch();\n    const onClickRemoveButton = React.useCallback(\n        () => dispatch(deleteBook(item.id)),\n        [dispatch, item.id]\n    );\n\n    const onClickDetailButton = React.useCallback(\n        () => {\n            localStorage.setItem('bookId', String(item.id));\n            dispatch(userClickedOnTheDetailsButton(item.id));\n        },\n        [dispatch, item.id]\n    );\n    \n    return (\n        <ActionsBlockButton>\n            <Link to={{ pathname: `/book/${item.id}`}}>\n                <Tooltip title=\"Detailed information\">\n                    <InfoCircleFilled onClick={onClickDetailButton} />\n                </Tooltip>\n            </Link>\n            <Link to={{ pathname: `/` }}>\n                <Tooltip title=\"Delete book\">\n                    <MinusCircleFilled style={{ marginLeft: '16px' }} onClick={onClickRemoveButton} />\n                </Tooltip>\n            </Link>\n        </ActionsBlockButton>\n    )\n};","import {ListType} from \"../types\";\nimport React from \"react\";\nimport {ButtonInfo} from \"./ButtonInfo\";\n\nexport const columns = [\n    {\n        title: 'Title of the book',\n        dataIndex: 'item',\n        key: 'name',\n        render: (_record: any, item: ListType) => <div key={item.id}>{item.name}</div>,\n    },\n    {\n        title: 'Author',\n        dataIndex: 'item',\n        key: 'author',\n        render: (_record: any, item: ListType) => <div key={item.id}>{item.author}</div>,\n    },\n    {\n        title: 'The year of publishing',\n        dataIndex: 'item',\n        key: 'yearPub',\n        render: (_record: any, item: ListType) => <div key={item.id}>{item.yearOfPublishing}</div>,\n    },\n    {\n        title: 'Language',\n        dataIndex: 'item',\n        key: 'language',\n        render: (_record: any, item: ListType) => <div key={item.id}>{item.language}</div>,\n    },\n    {\n        title: 'Action',\n        dataIndex: 'item',\n        key: 'action',\n        render: (_record: any, item: ListType) => <ButtonInfo item={item} />,\n    },\n];","import React from \"react\";\nimport {RootState} from \"../../redux\";\nimport {userClickedOnTheDetailsButton, getBookList} from \"../redux/actions\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { ListType } from \"../types\";\nimport {Table} from \"antd\";\nimport * as s from '../styled';\nimport {columns} from \"./columns\";\n\nconst tableStyles: React.CSSProperties = { width: \"100%\" };\nexport const MainInfoComponent: React.FC = () => {\n    const dispatch = useDispatch(); // получение функции store.dispatch в компоненте\n    const bookList = useSelector<RootState, ListType[]>(state => state.library.list);\n\n    React.useEffect(() => {\n        dispatch(getBookList.started());\n    }, [dispatch]);\n\n    return (\n        <s.WrapperComponentStyled>\n            <s.TitleStyled>Welcome to the online library</s.TitleStyled>\n            <Table\n                style={tableStyles}\n                dataSource={bookList}\n                columns={columns}\n            />\n        </s.WrapperComponentStyled>\n    );\n};\n","import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../../redux\";\nimport {InputItemStyled} from \"../styled\";\n\nexport const ItemComponent: React.FC<{ item: string; onChange: (e: any) => void }> = ({ item, onChange }) => {\n    const isEditMode = useSelector<RootState, boolean>(\n        state => state.library.isEditMode\n    );\n\n    return isEditMode ? <InputItemStyled value={item} onChange={onChange} /> : <div>{item}</div>\n};","import React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootState} from \"../../redux\";\nimport {ActiveButtonStyled, ModalBodyLabelStyled, StatusBlockStyled} from \"../styled\";\nimport {DatePicker, Input, Modal} from \"antd\";\nimport {changeStatusBook} from \"../redux/actions\";\n\nconst inputStyles: React.CSSProperties = { marginLeft: '8px' };\n\nexport const StatusComponent: React.FC<\n{\n  inStock: boolean;\n  reader: string;\n  returnDate: string\n}> = ({ inStock, reader, returnDate }) => {\n    const dispatch = useDispatch();\n    const isEditMode = useSelector<RootState, boolean>(\n        state => state.library.isEditMode\n    );\n    const [visible, setVisible] = React.useState(false);\n    const [inputReader, setInputReader] = React.useState('');\n    const [inputReturnDate, setInputReturnDate] = React.useState('');\n    const [inputReturnDateMoment, setInputReturnDateMoment] = React.useState(null);\n\n    const onOk = React.useCallback(() => {\n        setVisible(false);\n        setInputReturnDate('');\n        setInputReader('');\n        setInputReturnDateMoment(null);\n        dispatch(changeStatusBook({ reader: inputReader, returnDate: inputReturnDate }));\n    }, [dispatch, inputReader, inputReturnDate]);\n\n    const onClickReturnBookBut = React.useCallback(() => {\n        dispatch(changeStatusBook({ reader: null, returnDate: null }));\n    }, [dispatch]);\n    \n    const onCancel = React.useCallback(() => {\n        setVisible(false);\n        setInputReturnDate('');\n        setInputReader('');\n        setInputReturnDateMoment(null);\n    }, []);\n\n    const onClickTakeButton = React.useCallback(() => setVisible(true), []);\n    \n    const onChangeInputReader = React.useCallback(e => {\n        setInputReader(e.target.value);\n    }, []);\n\n    const onChangeDatePicker = React.useCallback((date, dateString) => {\n        setInputReturnDate(dateString);\n        setInputReturnDateMoment(date);\n    }, []);\n\n    const ActiveButton = isEditMode ?\n        inStock\n            ? <ActiveButtonStyled type=\"primary\" onClick={onClickTakeButton}>Take a book</ActiveButtonStyled>\n            : <ActiveButtonStyled\n                type=\"primary\"\n                onClick={onClickReturnBookBut}\n            >\n                Return to the library\n            </ActiveButtonStyled>\n    : null;\n\n    return (\n        <StatusBlockStyled>\n            { inStock\n                ? <div>В наличии</div>\n                : (\n                    <div>\n                        Книги нет в наличии.\n                        <div>{`Читатель: ${reader}`}</div>\n                        <div>{`Дата возврата: ${returnDate}`}</div>\n                    </div>\n                )\n            }\n            {ActiveButton}\n            <Modal\n                title='Take a book'\n                visible={visible}\n                onOk={onOk}\n                onCancel={onCancel}\n            >\n                <ModalBodyLabelStyled>\n                    <div>Reader:</div>\n                    <Input style={inputStyles} value={inputReader} onChange={onChangeInputReader} />\n                </ModalBodyLabelStyled>\n                <ModalBodyLabelStyled>\n                    <div>Return date:</div>\n                    <DatePicker value={inputReturnDateMoment} style={inputStyles} onChange={onChangeDatePicker} />\n                </ModalBodyLabelStyled>\n            </Modal>\n        </StatusBlockStyled>\n    );\n};","import React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootState} from \"../../redux\";\nimport {ListType} from \"../types\";\nimport * as s from '../styled';\nimport {Descriptions, Tooltip} from \"antd\";\nimport {cancelChanges, changeIsEditMode, getBookInfoInitialize, saveChanges} from \"../redux/actions\";\nimport {ItemComponent} from \"./descriptionsItem\";\nimport { HomeFilled } from '@ant-design/icons';\nimport {Link} from \"react-router-dom\";\nimport {StatusComponent} from \"./statusComponent\";\n\nconst buttonStyles: React.CSSProperties = { marginLeft: '16px' };\nconst homeIconStyles: React.CSSProperties = { fontSize: '24px', marginTop: '16px' };\n\nexport const DetailsInfoComponent: React.FC = () => {\n    const dispatch = useDispatch();\n\n    const initialize = useSelector<RootState, boolean>(\n        state => state.library.initialize\n    );\n\n    React.useEffect(() => {\n        if (initialize)\n            dispatch(getBookInfoInitialize.started(Number(localStorage.getItem('bookId'))))\n    }, [dispatch, initialize]);\n\n    const currentBookInfo = useSelector<RootState, ListType | any>(\n        state => state.library.currentBookInfo || {}\n    );\n    const isEditMode = useSelector<RootState, boolean>(\n        state => state.library.isEditMode\n    );\n    const isSaving = useSelector<RootState, boolean>(\n        state => state.library.isSaving\n    );\n    const {\n        yearOfPublishing,\n        author,\n        name,\n    } = currentBookInfo;\n\n    const [inputTitle, setInputTitle] = React.useState(name);\n    const [inputAuthor, setInputAuthor] = React.useState(author);\n    const [inputYearOfPublishing, setInputYearOfPublishing] = React.useState(yearOfPublishing);\n\n    const onClick = React.useCallback(\n        () => {\n            if (!isEditMode) {\n                dispatch(changeIsEditMode(true));\n            } else {\n                const bookInfo: ListType = {\n                    ...currentBookInfo,\n                    name: inputTitle,\n                    author: inputAuthor,\n                    yearOfPublishing: inputYearOfPublishing\n                };\n                dispatch(saveChanges.started(bookInfo))\n            }\n        },\n        [currentBookInfo, dispatch, inputAuthor, inputTitle, inputYearOfPublishing, isEditMode]\n    );\n\n    const onClickHomeButton = React.useCallback(() => dispatch(changeIsEditMode(false)), [dispatch]);\n\n    React.useEffect(() => {\n        setInputTitle(name);\n    }, [name]);\n\n    React.useEffect(() => {\n        setInputAuthor(author);\n    }, [author]);\n\n    React.useEffect(() => {\n        setInputYearOfPublishing(yearOfPublishing);\n    }, [yearOfPublishing]);\n\n    const onChangeInputTitle = React.useCallback(e => {\n        setInputTitle(e.target.value);\n    }, []);\n\n    const onChangeInputAuthor = React.useCallback(e => {\n        setInputAuthor(e.target.value);\n    }, []);\n\n    const onChangeYearOfPublishing = React.useCallback(e => {\n        setInputYearOfPublishing(e.target.value);\n    }, []);\n\n    const onClickCancelButton = React.useCallback(\n        () => {\n            setInputTitle(name);\n            setInputAuthor(author);\n            setInputYearOfPublishing(yearOfPublishing);\n            dispatch(cancelChanges());\n        },\n        [author, dispatch, name, yearOfPublishing]\n    );\n    \n    return (\n        <s.BookWrapperComponentStyled>\n            <s.BlockInfoStyled>\n                <s.TitleStyled>Book Info</s.TitleStyled>\n                <s.DescriptionsStyled title=\"\" bordered column={1}>\n                    <Descriptions.Item label=\"Title of the book\t\">\n                        <ItemComponent item={inputTitle} onChange={onChangeInputTitle} />\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Author\">\n                        <ItemComponent item={inputAuthor} onChange={onChangeInputAuthor} />\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"The year of publishing\">\n                        <ItemComponent item={inputYearOfPublishing} onChange={onChangeYearOfPublishing} />\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Language\">{currentBookInfo.language}</Descriptions.Item>\n                    <Descriptions.Item label=\"Number of pages\">{currentBookInfo.numberOfPages}</Descriptions.Item>\n                    <Descriptions.Item label=\"Status\">\n                        <StatusComponent\n                            inStock={currentBookInfo.inStock}\n                            reader={currentBookInfo.reader}\n                            returnDate={currentBookInfo.returnDate}\n                        />\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Description\">\n                        {currentBookInfo.description || 'No description'}\n                    </Descriptions.Item>\n                </s.DescriptionsStyled>\n                <s.ButtonBlockStyled>\n                    <s.ButtonStyled onClick={onClickCancelButton}>Cancel</s.ButtonStyled>\n                    <s.ButtonStyled\n                        type=\"primary\"\n                        style={buttonStyles}\n                        onClick={onClick}\n                        loading={isSaving}\n                    >\n                        {isEditMode ? 'Save' : 'Edit' }\n                    </s.ButtonStyled>\n                </s.ButtonBlockStyled>\n            </s.BlockInfoStyled>\n           <s.ControlPanelStyled>\n               <Tooltip title=\"Homepage\">\n                   <Link to={{ pathname: '/'}}>\n                       <HomeFilled style={homeIconStyles} onClick={onClickHomeButton} />\n                   </Link>\n               </Tooltip>\n           </s.ControlPanelStyled>\n        </s.BookWrapperComponentStyled>\n    );\n};\n","import {Layout} from \"antd\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport * as React from \"react\";\nimport {MainInfoComponent} from \"./mainPage\";\nimport {DetailsInfoComponent} from \"./bookDetails\";\nconst { Content } = Layout;\n\nexport const MainComponent: React.FC = () => {\n    return (\n        <Router>\n            <Layout style={{ minHeight: '100vh' }}>\n                <Layout style={{ background: 'white' }}>\n                    <Content>\n                        <Switch>\n                            <Route exact path='/book/:id' component={DetailsInfoComponent} />\n                            <Route exact path=\"/\" component={MainInfoComponent} />\n                        </Switch>\n                    </Content>\n                </Layout>\n            </Layout>\n        </Router>\n    )\n};","import axios from 'axios';\nimport {ListType} from \"../library/types\";\n\naxios.defaults.baseURL = 'http://localhost:8080';\n\nexport const getBookList = () => axios.get('/list');\n\nexport const getBookInfoById = (id: number) => axios.get(`/book/${id}`);\n\nexport const updateBook = (id: number, bookInfo: ListType) => axios.put(`/book/${id}`, bookInfo);\n\nexport const deleteBookApi = (id: number) => axios.delete(`/book/delete/${id}`);","import {RootState} from \"../../redux\";\n\nexport const getCurrentBookInfo = (state: RootState) => state.library.currentBookInfo;\nexport const getCurrentBookId = (state: RootState) => state.library.currentBookId;","import { all, takeLatest, call, put, select } from 'redux-saga/effects';\nimport * as actions from './actions';\nimport {deleteBookApi, getBookInfoById, getBookList, updateBook} from \"../../api\";\nimport {getCurrentBookId, getCurrentBookInfo} from \"./selectors\";\n\nfunction* getList() {\n  try {\n    const { data } = yield call(getBookList);\n    yield put(actions.getBookList.done({\n      params: undefined,\n      result: data\n    }));\n  }\n  catch (error) {\n    console.error(error);\n    yield put(actions.getBookList.failed({\n      params: undefined,\n      error,\n    }));\n  }\n}\n\nfunction* updateBookInfo() {\n  try {\n    const currentBookInfo = yield select(getCurrentBookInfo);\n    const currentBookId = yield select(getCurrentBookId);\n    yield call(updateBook, currentBookId, currentBookInfo);\n    yield put(actions.saveChanges.done({ params: null, result: true }))\n  }\n  catch (error) {\n    console.error(error);\n    yield put(actions.saveChanges.failed({ error, params: null }));\n  }\n}\n\nfunction* deleteBook() {\n  try {\n    const currentBookId = yield select(getCurrentBookId);\n    yield call(deleteBookApi, currentBookId);\n  }\n  catch (error) {\n    console.error(error);\n  }\n}\n\nfunction* getInfoByBookId() {\n  try {\n    const currentBookId = yield select(getCurrentBookId);\n    const { data } = yield call(getBookInfoById, currentBookId);\n    yield put(actions.getBookInfoInitialize.done({ params: currentBookId, result: data }))\n  }\n  catch (error) {\n    console.error(error);\n    yield put(actions.getBookInfoInitialize.failed({ params: 0, error }))\n  }\n}\nexport function* saga() {\n  yield all([\n      takeLatest(actions.getBookList.started, getList),\n      takeLatest(actions.saveChanges.started, updateBookInfo),\n      takeLatest(actions.deleteBook, deleteBook),\n      takeLatest(actions.getBookInfoInitialize.started, getInfoByBookId)\n  ]);\n}\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\n\nimport * as actions from './actions';\nimport { ListType } from \"../types\";\n\nexport interface ILibraryReducerShape {\n  list: ListType[];\n  currentBookId: number | null;\n  isEditMode: boolean;\n  isSaving: boolean;\n  currentBookInfo: ListType | null;\n  initialize: boolean;\n}\n\nconst initialState: ILibraryReducerShape = {\n  list: [],\n  currentBookId: null,\n  isEditMode: false,\n  isSaving: false,\n  currentBookInfo: null,\n  initialize: true,\n};\n\nexport default reducerWithInitialState<ILibraryReducerShape>(initialState)\n    .case(\n        actions.getBookList.done,\n        (state, payload): ILibraryReducerShape => ({\n            ...state,\n            list: payload.result,\n        }),\n    )\n    .case(\n        actions.userClickedOnTheDetailsButton, (state, payload) => ({\n            ...state,\n            currentBookId: payload,\n            currentBookInfo: state.list.find(item => item.id === payload) || null,\n            isEditMode: initialState.isEditMode,\n        })\n    )\n    .case(\n        actions.changeIsEditMode, (state, payload) => ({\n            ...state,\n            isEditMode: payload,\n        })\n    )\n    .case(\n        actions.saveChanges.started, (state, payload) => ({\n            ...state,\n            isSaving: true,\n            currentBookInfo: payload,\n        })\n    )\n    .cases(\n        [actions.saveChanges.done, actions.saveChanges.failed], state => ({\n            ...state,\n            isSaving: initialState.isSaving,\n            isEditMode: !state.isEditMode,\n        })\n    )\n    .case(actions.changeStatusBook, (state, payload) => ({\n        ...state,\n        currentBookInfo: state.currentBookInfo ? {\n            ...state.currentBookInfo,\n            inStock: !(payload.reader && payload.returnDate),\n            reader: payload.reader,\n            returnDate: payload.returnDate\n        } : null,\n    }))\n    .case(actions.cancelChanges, state => ({\n        ...state,\n        currentBookInfo: state.list.find(item => item.id === state.currentBookId) || null,\n        isEditMode: false,\n    }))\n    .case(actions.deleteBook, (state, payload) => ({\n        ...state,\n        currentBookId: payload,\n        list: state.list.reduce((acc: ListType[], item) => {\n            if (item.id !== payload) {\n                return [...acc, item];\n            }\n            return acc;\n        }, []),\n    }))\n    .case(actions.getBookInfoInitialize.started, (state, payload) => ({\n        ...state,\n        currentBookId: payload,\n    }))\n    .case(actions.getBookInfoInitialize.done, (state, payload) => ({\n        ...state,\n        currentBookInfo: payload.result || null,\n        initialize: false,\n    }))\n    .case(actions.getBookInfoInitialize.failed, state => ({\n        ...state,\n        initialize: false,\n    }));\n","import { combineReducers } from 'redux';\nimport { all } from 'redux-saga/effects';\n\n// sagas\n\nimport { saga as librarySaga } from '../library/redux/sagas';\n\n// reducers\nimport library, {ILibraryReducerShape} from '../library/redux/reducer';\nexport interface RootState {\n  library: ILibraryReducerShape;\n}\nexport const reducer = combineReducers<RootState>({\n  library,\n});\n\nexport function* saga() {\n  yield all([librarySaga()]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleWare from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { reducer, saga } from './index';\n\nfunction configureStore() {\n  const sagaMiddleWare = createSagaMiddleWare();\n  const store = createStore(\n    reducer,\n    composeWithDevTools(applyMiddleware(sagaMiddleWare)),\n  );\n  sagaMiddleWare.run(saga);\n  //\n  return store;\n}\n\nexport default configureStore();\n","import React from 'react';\nimport './App.css';\nimport {MainComponent} from \"./library\";\nimport {Provider} from \"react-redux\";\nimport store from './redux/store';\n\nfunction App() {\n  return (\n      <Provider store={store}>\n        <MainComponent />\n      </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(React.createElement(App), document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}